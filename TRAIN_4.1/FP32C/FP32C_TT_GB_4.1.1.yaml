GlobalParameters:
  MinimumRequiredVersion: 4.14.0
  # ForceRedoBenchmarkProblems: False
  # ForceRedoLibraryLogic: False
  # ForceRedoLibraryClient: False
  # MergeFiles: False
  # CMakeBuildType: Debug
  EnqueuesPerSync: 1
  SyncsPerBenchmark: 1
  NumBenchmarks: 1
  numWarmups: 1
  KernelTime: True
  SleepPercent: 500
  # PrintSolutionRejectionReason: True
  PrintWinnersOnly: True
  # ForceGenerateKernel: True
  NumElementsToValidate: 0
  # DataInitTypeA: 0
  # DataInitTypeB: 0
  # DataInitTypeC: 0
  # DataInitTypeD: 3
  DataInitTypeBeta: 0
  DataInitTypeAlpha: 1
  NewClient: 2
  CSVExportWinner: 1
  CSVMergeSameProblemID: 1
  # CpuThreads: 1
  # PreciseKernelTime: 0
  LegacyComponents: 0
  ShortNames: 1
  # MaxFileName: 1
  # MinKForGSU: 512
  MaxWorkspaceSize: 8388608

BenchmarkProblems:
  ########################################
  # NN - standard
  ########################################
  -
    - # ProblemType
      OperationType: GEMM
      DataType: c
      # DestDataType: B
      # ComputeDataType: s
      # HighPrecisionAccumulate: True
      TransposeA: True
      TransposeB: True
      UseBeta: True
      Batched: True
      StridedBatched: False

    - # BenchmarkProblemSizeGroup - specify
      InitialSolutionParameters:
      BenchmarkCommonParameters:
        - KernelLanguage: ["Assembly"]
        - EdgeType: ["ShiftPtr"]
      ForkParameters:
        - MatrixInstruction:
          # 16
          - [16, 16, 4, 1,  1,  1,1,  2,2]  # 32x32
          - [16, 16, 4, 1,  1,  1,2,  2,2]  # 32x64
          - [16, 16, 4, 1,  1,  2,1,  2,2]  # 64x32
          # 32
          - [32, 32, 2, 1,  1,  1,1,  2,2]  # 64x64
          - [32, 32, 2, 1,  1,  1,2,  2,2]  # 64x128
          - [32, 32, 2, 1,  1,  1,1,  1,4]  # 32x128
          - [32, 32, 2, 1,  1,  1,1,  4,1]  # 128x32
          - [32, 32, 2, 1,  1,  2,2,  2,2]  # 128x128
          - [32, 32, 2, 1,  1,  2,1,  4,1]  # 256x32
          - [32, 32, 2, 1,  1,  1,2,  1,4]  # 32x256
          # special
          - [32, 32, 2, 1,  1,  1,3,  1,4]  # 32x384
          - [32, 32, 2, 1,  1,  3,1,  4,1]  # 384x32
          - [32, 32, 2, 1,  1,  3,3,  2,2]  # 192x192
        - ThreadTile:
          - [ 1, 32 ]
        - WorkGroup:
          - [ 64, 4, 1 ]
        - AssertFree0ElementMultiple: [1]
        - PrefetchGlobalRead: [1,2]
        - PrefetchLocalRead: [5,9,17]
        - DepthU: [16,32]
        - VectorWidth: [1]
        - GlobalReadVectorWidth: [1,2,4]
        - LocalReadVectorWidth: [2]
        - SuppressNoLoadLoop: [0]
        - OptNoLoadLoop: [1]
        - ScheduleLocalWrite: [1]
        - ScheduleGlobalRead: [1]
        - ScheduleIterAlg: [3]
        - InnerUnroll: [1]
        - ExpandPointerSwap: [1]
        - TransposeLDS: [1]
        - LdsBlockSizePerPad: [-1]
        - LdsPadA: [-1]
        - LdsPadB: [-1]
        - StoreRemapVectorWidth: [-1]
        # - StaggerUMapping: [0,3]
        # - StaggerUStride: [128,256]
        # - StaggerU: [0,32]
        - WorkGroupMapping: [1,2,15]
        - WaveSeparateGlobalReadA: [1]
        - WaveSeparateGlobalReadB: [1]
        - 1LDSBuffer: [0,1]
        # - GlobalSplitU: [1]
      BenchmarkJoinParameters:
      BenchmarkFinalParameters:
        - ProblemSizes:
          # specify
          - Exact: [ 192,  192, 1000,   32]
          - Exact: [1536, 1536,  168,   32]
          - Exact: [1536,   32,  168, 1536]
          - Exact: [  32, 1536,  168,   32]
          - Exact: [ 384,  384, 1024,  384]

    - # BenchmarkProblemSizeGroup - 1-48
      InitialSolutionParameters:
      BenchmarkCommonParameters:
        - KernelLanguage: ["Assembly"]
        - EdgeType: ["ShiftPtr"]
      ForkParameters:
        - MatrixInstruction:
          - [16, 16, 4, 1,  1,  1,1,  1,1]  # 16x16
          - [16, 16, 4, 1,  1,  1,1,  1,2]  # 16x32
          - [16, 16, 4, 1,  1,  1,1,  2,1]  # 32x16
          - [16, 16, 4, 1,  1,  1,1,  2,2]  # 32x32
          - [32, 32, 2, 1,  1,  1,1,  1,1]  # 32x32
        - ThreadTile:
          - [ 1, 32 ]
        - WorkGroup:
          - [ 64, 4, 1 ]
        - AssertFree0ElementMultiple: [1]
        - PrefetchGlobalRead: [1,2]
        - PrefetchLocalRead: [5,9,17]
        - DepthU: [4,8,16,32]
        - VectorWidth: [1]
        - GlobalReadVectorWidth: [1,2,4]
        - LocalReadVectorWidth: [2]
        - SuppressNoLoadLoop: [0]
        - OptNoLoadLoop: [1]
        - ScheduleLocalWrite: [1]
        - ScheduleGlobalRead: [1]
        - ScheduleIterAlg: [3]
        - InnerUnroll: [1]
        - ExpandPointerSwap: [1]
        - TransposeLDS: [1]
        - LdsBlockSizePerPad: [-1]
        - LdsPadA: [-1]
        - LdsPadB: [-1]
        - StoreRemapVectorWidth: [-1]
        # - StaggerUMapping: [0,3]
        # - StaggerUStride: [128,256]
        # - StaggerU: [0,32]
        - WorkGroupMapping: [1,2,15]
        - WaveSeparateGlobalReadA: [1]
        - WaveSeparateGlobalReadB: [1]
        - 1LDSBuffer: [0,1]
        # - GlobalSplitU: [1]
      BenchmarkJoinParameters:
      BenchmarkFinalParameters:
        - ProblemSizes:
          # squre
          - Exact: [1, 1, 1000, 1]
          - Exact: [2, 2, 1000, 2]
          - Exact: [3, 3, 1000, 3]
          - Exact: [4, 4, 1000, 4]
          - Exact: [5, 5, 1000, 5]
          - Exact: [6, 6, 1000, 6]
          - Exact: [7, 7, 1000, 7]
          - Exact: [8, 8, 1000, 8]
          - Exact: [9, 9, 1000, 9]
          - Exact: [10, 10, 1000, 10]
          - Exact: [11, 11, 1000, 11]
          - Exact: [12, 12, 1000, 12]
          - Exact: [13, 13, 1000, 13]
          - Exact: [14, 14, 1000, 14]
          - Exact: [15, 15, 1000, 15]
          - Exact: [16, 16, 1000, 16]
          - Exact: [17, 17, 1000, 17]
          - Exact: [18, 18, 1000, 18]
          - Exact: [19, 19, 1000, 19]
          - Exact: [20, 20, 1000, 20]
          - Exact: [21, 21, 1000, 21]
          - Exact: [22, 22, 1000, 22]
          - Exact: [23, 23, 1000, 23]
          - Exact: [24, 24, 1000, 24]
          - Exact: [25, 25, 1000, 25]
          - Exact: [26, 26, 1000, 26]
          - Exact: [27, 27, 1000, 27]
          - Exact: [28, 28, 1000, 28]
          - Exact: [29, 29, 1000, 29]
          - Exact: [30, 30, 1000, 30]
          - Exact: [31, 31, 1000, 31]
          - Exact: [32, 32, 1000, 32]
          - Exact: [33, 33, 1000, 33]
          - Exact: [34, 34, 1000, 34]
          - Exact: [35, 35, 1000, 35]
          - Exact: [36, 36, 1000, 36]
          - Exact: [37, 37, 1000, 37]
          - Exact: [38, 38, 1000, 38]
          - Exact: [39, 39, 1000, 39]
          - Exact: [40, 40, 1000, 40]
          - Exact: [41, 41, 1000, 41]
          - Exact: [42, 42, 1000, 42]
          - Exact: [43, 43, 1000, 43]
          - Exact: [44, 44, 1000, 44]
          - Exact: [45, 45, 1000, 45]
          - Exact: [46, 46, 1000, 46]
          - Exact: [47, 47, 1000, 47]
          - Exact: [48, 48, 1000, 48]

    - # BenchmarkProblemSizeGroup - 32-150
      InitialSolutionParameters:
      BenchmarkCommonParameters:
        - KernelLanguage: ["Assembly"]
        - EdgeType: ["ShiftPtr"]
      ForkParameters:
        - MatrixInstruction:
          - [16, 16, 4, 1,  1,  1,1,  2,2] # 32x32
#          - [16, 16, 4, 1,  1,  1,2,  2,2] # 32x64
          - [16, 16, 4, 1,  1,  2,1,  2,2] # 64x32
          - [32, 32, 2, 1,  1,  1,1,  2,2]  # 64x64
          - [32, 32, 2, 1,  1,  1,2,  2,2]  # 64x128
#          - [32, 32, 2, 1,  1,  2,1,  2,2]  # 128x64
          - [32, 32, 2, 1,  1,  2,2,  2,2]  # 128x128
#          - [32, 32, 2, 1,  1,  1,4,  2,2]  # 64x256
#          - [32, 32, 2, 1,  1,  4,1,  2,2]  # 256x64
          - [32, 32, 2, 1,  1,  2,4,  2,2]  # 128x256
#          - [32, 32, 2, 1,  1,  4,2,  2,2]  # 256x128
#          - [32, 32, 2, 1,  1,  4,4,  2,2]  # 256x256

          # Specialized MT
          - [16, 16, 4, 1,  1,  3,3,  2,2] # 96x96
#          - [32, 32, 2, 1,  1,  3,1,  1,4]  # 96x128
#          - [32, 32, 2, 1,  1,  1,3,  4,1]  # 128x96
#          - [16, 16, 4, 1,  1,  1,9,  4,1] # 64x144
#          - [16, 16, 4, 1,  1,  9,1,  1,4] # 144x64
#          - [16, 16, 4, 1,  1,  2,9,  4,1] # 128x144
#          - [16, 16, 4, 1,  1,  9,2,  1,4] # 144x128
#          - [32, 32, 2, 1,  1,  1,5,  4,1]  # 128x160
#          - [32, 32, 2, 1,  1,  5,1,  1,4]  # 160x128
          - [16, 16, 4, 1,  1,  5,5,  2,2] # 160x160
#          - [32, 32, 2, 1,  1,  1,9,  4,1]  # 128x288
#          - [32, 32, 2, 1,  1,  9,1,  1,4]  # 288x128
          # - [16, 16, 4, 1,  1,  4,9,  4,1] # 256x144
          # - [16, 16, 4, 1,  1,  9,4,  1,4] # 144x256
          # - [32, 32, 2, 1,  1,  2,5,  4,1]  # 256x160
          # - [32, 32, 2, 1,  1,  5,2,  1,4]  # 160x256

          # - [32, 32, 2, 1,  1,  1,3,  2,2]  # 64x192
          # - [32, 32, 2, 1,  1,  1,3,  2,2]  # 64x192
          # - [32, 32, 2, 1,  1,  3,1,  2,2]  # 192x64
          # - [32, 32, 2, 1,  1,  2,3,  2,2]  # 128x192
          # - [32, 32, 2, 1,  1,  3,2,  2,2]  # 192x128
          # - [32, 32, 2, 1,  1,  3,3,  2,2]  # 192x192
          # - [32, 32, 2, 1,  1,  4,3,  2,2]  # 256x192
          # - [32, 32, 2, 1,  1,  3,4,  2,2]  # 192x256
        - ThreadTile:
          - [ 1, 32 ]
        - WorkGroup:
          - [ 64, 4, 1 ]
        - AssertFree0ElementMultiple: [1]
        - PrefetchGlobalRead: [1,2]
        - PrefetchLocalRead: [5,9,17]
        - DepthU: [16,32]
        - VectorWidth: [1]
        - GlobalReadVectorWidth: [1,2,4]
        - LocalReadVectorWidth: [2]
        - SuppressNoLoadLoop: [0]
        - OptNoLoadLoop: [1]
        - ScheduleLocalWrite: [1]
        - ScheduleGlobalRead: [1]
        - ScheduleIterAlg: [3]
        - InnerUnroll: [1]
        - ExpandPointerSwap: [1]
        - TransposeLDS: [1]
        - LdsBlockSizePerPad: [-1]
        - LdsPadA: [-1]
        - LdsPadB: [-1]
        - StoreRemapVectorWidth: [-1]
        # - StaggerUMapping: [0,3]
        # - StaggerUStride: [128,256]
        # - StaggerU: [0,32]
        - WorkGroupMapping: [1,2,15]
        - WaveSeparateGlobalReadA: [1]
        - WaveSeparateGlobalReadB: [1]
        - 1LDSBuffer: [0,1]
        # - GlobalSplitU: [1]
      BenchmarkJoinParameters:
      BenchmarkFinalParameters:
        - ProblemSizes:
          # squre
          - Exact: [32, 32, 1000, 32]
          - Exact: [33, 33, 1000, 33]
          - Exact: [34, 34, 1000, 34]
          - Exact: [35, 35, 1000, 35]
          - Exact: [36, 36, 1000, 36]
          - Exact: [37, 37, 1000, 37]
          - Exact: [38, 38, 1000, 38]
          - Exact: [39, 39, 1000, 39]
          - Exact: [40, 40, 1000, 40]
          - Exact: [41, 41, 1000, 41]
          - Exact: [42, 42, 1000, 42]
          - Exact: [43, 43, 1000, 43]
          - Exact: [44, 44, 1000, 44]
          - Exact: [45, 45, 1000, 45]
          - Exact: [46, 46, 1000, 46]
          - Exact: [47, 47, 1000, 47]
          - Exact: [48, 48, 1000, 48]
          - Exact: [49, 49, 1000, 49]
          - Exact: [50, 50, 1000, 50]
          - Exact: [51, 51, 1000, 51]
          - Exact: [52, 52, 1000, 52]
          - Exact: [53, 53, 1000, 53]
          - Exact: [54, 54, 1000, 54]
          - Exact: [55, 55, 1000, 55]
          - Exact: [56, 56, 1000, 56]
          - Exact: [57, 57, 1000, 57]
          - Exact: [58, 58, 1000, 58]
          - Exact: [59, 59, 1000, 59]
          - Exact: [60, 60, 1000, 60]
          - Exact: [61, 61, 1000, 61]
          - Exact: [62, 62, 1000, 62]
          - Exact: [63, 63, 1000, 63]
          - Exact: [64, 64, 1000, 64]
          - Exact: [65, 65, 1000, 65]
          - Exact: [66, 66, 1000, 66]
          - Exact: [67, 67, 1000, 67]
          - Exact: [68, 68, 1000, 68]
          - Exact: [69, 69, 1000, 69]
          - Exact: [70, 70, 1000, 70]
          - Exact: [71, 71, 1000, 71]
          - Exact: [72, 72, 1000, 72]
          - Exact: [73, 73, 1000, 73]
          - Exact: [74, 74, 1000, 74]
          - Exact: [75, 75, 1000, 75]
          - Exact: [76, 76, 1000, 76]
          - Exact: [77, 77, 1000, 77]
          - Exact: [78, 78, 1000, 78]
          - Exact: [79, 79, 1000, 79]
          - Exact: [80, 80, 1000, 80]
          - Exact: [81, 81, 1000, 81]
          - Exact: [82, 82, 1000, 82]
          - Exact: [83, 83, 1000, 83]
          - Exact: [84, 84, 1000, 84]
          - Exact: [85, 85, 1000, 85]
          - Exact: [86, 86, 1000, 86]
          - Exact: [87, 87, 1000, 87]
          - Exact: [88, 88, 1000, 88]
          - Exact: [89, 89, 1000, 89]
          - Exact: [90, 90, 1000, 90]
          - Exact: [91, 91, 1000, 91]
          - Exact: [92, 92, 1000, 92]
          - Exact: [93, 93, 1000, 93]
          - Exact: [94, 94, 1000, 94]
          - Exact: [95, 95, 1000, 95]
          - Exact: [96, 96, 1000, 96]
          - Exact: [97, 97, 1000, 97]
          - Exact: [98, 98, 1000, 98]
          - Exact: [99, 99, 1000, 99]
          - Exact: [100, 100, 1000, 100]
          - Exact: [101, 101, 1000, 101]
          - Exact: [102, 102, 1000, 102]
          - Exact: [103, 103, 1000, 103]
          - Exact: [104, 104, 1000, 104]
          - Exact: [105, 105, 1000, 105]
          - Exact: [106, 106, 1000, 106]
          - Exact: [107, 107, 1000, 107]
          - Exact: [108, 108, 1000, 108]
          - Exact: [109, 109, 1000, 109]
          - Exact: [110, 110, 1000, 110]
          - Exact: [111, 111, 1000, 111]
          - Exact: [112, 112, 1000, 112]
          - Exact: [113, 113, 1000, 113]
          - Exact: [114, 114, 1000, 114]
          - Exact: [115, 115, 1000, 115]
          - Exact: [116, 116, 1000, 116]
          - Exact: [117, 117, 1000, 117]
          - Exact: [118, 118, 1000, 118]
          - Exact: [119, 119, 1000, 119]
          - Exact: [120, 120, 1000, 120]
          - Exact: [121, 121, 1000, 121]
          - Exact: [122, 122, 1000, 122]
          - Exact: [123, 123, 1000, 123]
          - Exact: [124, 124, 1000, 124]
          - Exact: [125, 125, 1000, 125]
          - Exact: [126, 126, 1000, 126]
          - Exact: [127, 127, 1000, 127]
          - Exact: [128, 128, 1000, 128]
          - Exact: [129, 129, 1000, 129]
          - Exact: [130, 130, 1000, 130]
          - Exact: [131, 131, 1000, 131]
          - Exact: [132, 132, 1000, 132]
          - Exact: [133, 133, 1000, 133]
          - Exact: [134, 134, 1000, 134]
          - Exact: [135, 135, 1000, 135]
          - Exact: [136, 136, 1000, 136]
          - Exact: [137, 137, 1000, 137]
          - Exact: [138, 138, 1000, 138]
          - Exact: [139, 139, 1000, 139]
          - Exact: [140, 140, 1000, 140]
          - Exact: [141, 141, 1000, 141]
          - Exact: [142, 142, 1000, 142]
          - Exact: [143, 143, 1000, 143]
          - Exact: [144, 144, 1000, 144]
          - Exact: [145, 145, 1000, 145]
          - Exact: [146, 146, 1000, 146]
          - Exact: [147, 147, 1000, 147]
          - Exact: [148, 148, 1000, 148]
          - Exact: [149, 149, 1000, 149]
          - Exact: [150, 150, 1000, 150]

    - # BenchmarkProblemSizeGroup - Standard - All problem
      InitialSolutionParameters:
      BenchmarkCommonParameters:
        - KernelLanguage: ["Assembly"]
        - EdgeType: ["ShiftPtr"]
      ForkParameters:
        - MatrixInstruction:
          - [16, 16, 4, 1,  1,  1,1,  2,2] # 32x32
#          - [16, 16, 4, 1,  1,  1,2,  2,2] # 32x64
          - [16, 16, 4, 1,  1,  2,1,  2,2] # 64x32
          - [32, 32, 2, 1,  1,  1,1,  2,2]  # 64x64
          - [32, 32, 2, 1,  1,  1,2,  2,2]  # 64x128
#          - [32, 32, 2, 1,  1,  2,1,  2,2]  # 128x64
          - [32, 32, 2, 1,  1,  2,2,  2,2]  # 128x128
          - [32, 32, 2, 1,  1,  1,4,  2,2]  # 64x256
          - [32, 32, 2, 1,  1,  4,1,  2,2]  # 256x64
          - [32, 32, 2, 1,  1,  2,4,  2,2]  # 128x256
#          - [32, 32, 2, 1,  1,  4,2,  2,2]  # 256x128
          - [32, 32, 2, 1,  1,  4,4,  2,2]  # 256x256
        - ThreadTile:
          - [ 1, 32 ]
        - WorkGroup:
          - [ 64, 4, 1 ]
        - AssertFree0ElementMultiple: [1]
        - PrefetchGlobalRead: [1,2]
        - PrefetchLocalRead: [5,9,17]
        - DepthU: [16,32]
        - VectorWidth: [1]
        - GlobalReadVectorWidth: [1,2,4]
        - LocalReadVectorWidth: [2]
        - SuppressNoLoadLoop: [0]
        - OptNoLoadLoop: [1]
        - ScheduleLocalWrite: [1]
        - ScheduleGlobalRead: [1]
        - ScheduleIterAlg: [3]
        - InnerUnroll: [1]
        - ExpandPointerSwap: [1]
        - TransposeLDS: [1]
        - LdsBlockSizePerPad: [-1]
        - LdsPadA: [-1]
        - LdsPadB: [-1]
        - StoreRemapVectorWidth: [-1]
        # - StaggerUMapping: [0,3]
        # - StaggerUStride: [128,256]
        # - StaggerU: [0,32]
        - WorkGroupMapping: [1,2,15]
        - WaveSeparateGlobalReadA: [1]
        - WaveSeparateGlobalReadB: [1]
        - 1LDSBuffer: [0,1]
        # - GlobalSplitU: [1]
      BenchmarkJoinParameters:
      BenchmarkFinalParameters:
        - ProblemSizes:
          - Exact: [ 32, 32, 8, 32 ]
          - Exact: [ 32, 32, 8, 64 ]
          - Exact: [ 32, 32, 8, 128 ]
          - Exact: [ 32, 32, 8, 256 ]
          - Exact: [ 32, 32, 8, 512 ]
          - Exact: [ 32, 32, 8, 1024 ]
          - Exact: [ 32, 32, 8, 2048 ]
          - Exact: [ 32, 64, 8, 32 ]
          - Exact: [ 32, 64, 8, 64 ]
          - Exact: [ 32, 64, 8, 128 ]
          - Exact: [ 32, 64, 8, 256 ]
          - Exact: [ 32, 64, 8, 512 ]
          - Exact: [ 32, 64, 8, 1024 ]
          - Exact: [ 32, 64, 8, 2048 ]
          - Exact: [ 32, 128, 8, 32 ]
          - Exact: [ 32, 128, 8, 64 ]
          - Exact: [ 32, 128, 8, 128 ]
          - Exact: [ 32, 128, 8, 256 ]
          - Exact: [ 32, 128, 8, 512 ]
          - Exact: [ 32, 128, 8, 1024 ]
          - Exact: [ 32, 128, 8, 2048 ]
          - Exact: [ 32, 256, 8, 32 ]
          - Exact: [ 32, 256, 8, 64 ]
          - Exact: [ 32, 256, 8, 128 ]
          - Exact: [ 32, 256, 8, 256 ]
          - Exact: [ 32, 256, 8, 512 ]
          - Exact: [ 32, 256, 8, 1024 ]
          - Exact: [ 32, 256, 8, 2048 ]
          - Exact: [ 32, 512, 8, 32 ]
          - Exact: [ 32, 512, 8, 64 ]
          - Exact: [ 32, 512, 8, 128 ]
          - Exact: [ 32, 512, 8, 256 ]
          - Exact: [ 32, 512, 8, 512 ]
          - Exact: [ 32, 512, 8, 1024 ]
          - Exact: [ 32, 512, 8, 2048 ]
          - Exact: [ 32, 1024, 8, 32 ]
          - Exact: [ 32, 1024, 8, 64 ]
          - Exact: [ 32, 1024, 8, 128 ]
          - Exact: [ 32, 1024, 8, 256 ]
          - Exact: [ 32, 1024, 8, 512 ]
          - Exact: [ 32, 1024, 8, 1024 ]
          - Exact: [ 32, 1024, 8, 2048 ]
          - Exact: [ 32, 2048, 8, 32 ]
          - Exact: [ 32, 2048, 8, 64 ]
          - Exact: [ 32, 2048, 8, 128 ]
          - Exact: [ 32, 2048, 8, 256 ]
          - Exact: [ 32, 2048, 8, 512 ]
          - Exact: [ 32, 2048, 8, 1024 ]
          - Exact: [ 32, 2048, 8, 2048 ]
          - Exact: [ 64, 32, 8, 32 ]
          - Exact: [ 64, 32, 8, 64 ]
          - Exact: [ 64, 32, 8, 128 ]
          - Exact: [ 64, 32, 8, 256 ]
          - Exact: [ 64, 32, 8, 512 ]
          - Exact: [ 64, 32, 8, 1024 ]
          - Exact: [ 64, 32, 8, 2048 ]
          - Exact: [ 64, 64, 8, 32 ]
          - Exact: [ 64, 64, 8, 64 ]
          - Exact: [ 64, 64, 8, 128 ]
          - Exact: [ 64, 64, 8, 256 ]
          - Exact: [ 64, 64, 8, 512 ]
          - Exact: [ 64, 64, 8, 1024 ]
          - Exact: [ 64, 64, 8, 2048 ]
          - Exact: [ 64, 128, 8, 32 ]
          - Exact: [ 64, 128, 8, 64 ]
          - Exact: [ 64, 128, 8, 128 ]
          - Exact: [ 64, 128, 8, 256 ]
          - Exact: [ 64, 128, 8, 512 ]
          - Exact: [ 64, 128, 8, 1024 ]
          - Exact: [ 64, 128, 8, 2048 ]
          - Exact: [ 64, 256, 8, 32 ]
          - Exact: [ 64, 256, 8, 64 ]
          - Exact: [ 64, 256, 8, 128 ]
          - Exact: [ 64, 256, 8, 256 ]
          - Exact: [ 64, 256, 8, 512 ]
          - Exact: [ 64, 256, 8, 1024 ]
          - Exact: [ 64, 256, 8, 2048 ]
          - Exact: [ 64, 512, 8, 32 ]
          - Exact: [ 64, 512, 8, 64 ]
          - Exact: [ 64, 512, 8, 128 ]
          - Exact: [ 64, 512, 8, 256 ]
          - Exact: [ 64, 512, 8, 512 ]
          - Exact: [ 64, 512, 8, 1024 ]
          - Exact: [ 64, 512, 8, 2048 ]
          - Exact: [ 64, 1024, 8, 32 ]
          - Exact: [ 64, 1024, 8, 64 ]
          - Exact: [ 64, 1024, 8, 128 ]
          - Exact: [ 64, 1024, 8, 256 ]
          - Exact: [ 64, 1024, 8, 512 ]
          - Exact: [ 64, 1024, 8, 1024 ]
          - Exact: [ 64, 1024, 8, 2048 ]
          - Exact: [ 64, 2048, 8, 32 ]
          - Exact: [ 64, 2048, 8, 64 ]
          - Exact: [ 64, 2048, 8, 128 ]
          - Exact: [ 64, 2048, 8, 256 ]
          - Exact: [ 64, 2048, 8, 512 ]
          - Exact: [ 64, 2048, 8, 1024 ]
          - Exact: [ 64, 2048, 8, 2048 ]
          - Exact: [ 128, 32, 8, 32 ]
          - Exact: [ 128, 32, 8, 64 ]
          - Exact: [ 128, 32, 8, 128 ]
          - Exact: [ 128, 32, 8, 256 ]
          - Exact: [ 128, 32, 8, 512 ]
          - Exact: [ 128, 32, 8, 1024 ]
          - Exact: [ 128, 32, 8, 2048 ]
          - Exact: [ 128, 64, 8, 32 ]
          - Exact: [ 128, 64, 8, 64 ]
          - Exact: [ 128, 64, 8, 128 ]
          - Exact: [ 128, 64, 8, 256 ]
          - Exact: [ 128, 64, 8, 512 ]
          - Exact: [ 128, 64, 8, 1024 ]
          - Exact: [ 128, 64, 8, 2048 ]
          - Exact: [ 128, 128, 8, 32 ]
          - Exact: [ 128, 128, 8, 64 ]
          - Exact: [ 128, 128, 8, 128 ]
          - Exact: [ 128, 128, 8, 256 ]
          - Exact: [ 128, 128, 8, 512 ]
          - Exact: [ 128, 128, 8, 1024 ]
          - Exact: [ 128, 128, 8, 2048 ]
          - Exact: [ 128, 256, 8, 32 ]
          - Exact: [ 128, 256, 8, 64 ]
          - Exact: [ 128, 256, 8, 128 ]
          - Exact: [ 128, 256, 8, 256 ]
          - Exact: [ 128, 256, 8, 512 ]
          - Exact: [ 128, 256, 8, 1024 ]
          - Exact: [ 128, 256, 8, 2048 ]
          - Exact: [ 128, 512, 8, 32 ]
          - Exact: [ 128, 512, 8, 64 ]
          - Exact: [ 128, 512, 8, 128 ]
          - Exact: [ 128, 512, 8, 256 ]
          - Exact: [ 128, 512, 8, 512 ]
          - Exact: [ 128, 512, 8, 1024 ]
          - Exact: [ 128, 512, 8, 2048 ]
          - Exact: [ 128, 1024, 8, 32 ]
          - Exact: [ 128, 1024, 8, 64 ]
          - Exact: [ 128, 1024, 8, 128 ]
          - Exact: [ 128, 1024, 8, 256 ]
          - Exact: [ 128, 1024, 8, 512 ]
          - Exact: [ 128, 1024, 8, 1024 ]
          - Exact: [ 128, 1024, 8, 2048 ]
          - Exact: [ 128, 2048, 8, 32 ]
          - Exact: [ 128, 2048, 8, 64 ]
          - Exact: [ 128, 2048, 8, 128 ]
          - Exact: [ 128, 2048, 8, 256 ]
          - Exact: [ 128, 2048, 8, 512 ]
          - Exact: [ 128, 2048, 8, 1024 ]
          - Exact: [ 128, 2048, 8, 2048 ]
          - Exact: [ 256, 32, 8, 32 ]
          - Exact: [ 256, 32, 8, 64 ]
          - Exact: [ 256, 32, 8, 128 ]
          - Exact: [ 256, 32, 8, 256 ]
          - Exact: [ 256, 32, 8, 512 ]
          - Exact: [ 256, 32, 8, 1024 ]
          - Exact: [ 256, 32, 8, 2048 ]
          - Exact: [ 256, 64, 8, 32 ]
          - Exact: [ 256, 64, 8, 64 ]
          - Exact: [ 256, 64, 8, 128 ]
          - Exact: [ 256, 64, 8, 256 ]
          - Exact: [ 256, 64, 8, 512 ]
          - Exact: [ 256, 64, 8, 1024 ]
          - Exact: [ 256, 64, 8, 2048 ]
          - Exact: [ 256, 128, 8, 32 ]
          - Exact: [ 256, 128, 8, 64 ]
          - Exact: [ 256, 128, 8, 128 ]
          - Exact: [ 256, 128, 8, 256 ]
          - Exact: [ 256, 128, 8, 512 ]
          - Exact: [ 256, 128, 8, 1024 ]
          - Exact: [ 256, 128, 8, 2048 ]
          - Exact: [ 256, 256, 8, 32 ]
          - Exact: [ 256, 256, 8, 64 ]
          - Exact: [ 256, 256, 8, 128 ]
          - Exact: [ 256, 256, 8, 256 ]
          - Exact: [ 256, 256, 8, 512 ]
          - Exact: [ 256, 256, 8, 1024 ]
          - Exact: [ 256, 256, 8, 2048 ]
          - Exact: [ 256, 512, 8, 32 ]
          - Exact: [ 256, 512, 8, 64 ]
          - Exact: [ 256, 512, 8, 128 ]
          - Exact: [ 256, 512, 8, 256 ]
          - Exact: [ 256, 512, 8, 512 ]
          - Exact: [ 256, 512, 8, 1024 ]
          - Exact: [ 256, 512, 8, 2048 ]
          - Exact: [ 256, 1024, 8, 32 ]
          - Exact: [ 256, 1024, 8, 64 ]
          - Exact: [ 256, 1024, 8, 128 ]
          - Exact: [ 256, 1024, 8, 256 ]
          - Exact: [ 256, 1024, 8, 512 ]
          - Exact: [ 256, 1024, 8, 1024 ]
          - Exact: [ 256, 1024, 8, 2048 ]
          - Exact: [ 256, 2048, 8, 32 ]
          - Exact: [ 256, 2048, 8, 64 ]
          - Exact: [ 256, 2048, 8, 128 ]
          - Exact: [ 256, 2048, 8, 256 ]
          - Exact: [ 256, 2048, 8, 512 ]
          - Exact: [ 256, 2048, 8, 1024 ]
          - Exact: [ 256, 2048, 8, 2048 ]
          - Exact: [ 512, 32, 8, 32 ]
          - Exact: [ 512, 32, 8, 64 ]
          - Exact: [ 512, 32, 8, 128 ]
          - Exact: [ 512, 32, 8, 256 ]
          - Exact: [ 512, 32, 8, 512 ]
          - Exact: [ 512, 32, 8, 1024 ]
          - Exact: [ 512, 32, 8, 2048 ]
          - Exact: [ 512, 64, 8, 32 ]
          - Exact: [ 512, 64, 8, 64 ]
          - Exact: [ 512, 64, 8, 128 ]
          - Exact: [ 512, 64, 8, 256 ]
          - Exact: [ 512, 64, 8, 512 ]
          - Exact: [ 512, 64, 8, 1024 ]
          - Exact: [ 512, 64, 8, 2048 ]
          - Exact: [ 512, 128, 8, 32 ]
          - Exact: [ 512, 128, 8, 64 ]
          - Exact: [ 512, 128, 8, 128 ]
          - Exact: [ 512, 128, 8, 256 ]
          - Exact: [ 512, 128, 8, 512 ]
          - Exact: [ 512, 128, 8, 1024 ]
          - Exact: [ 512, 128, 8, 2048 ]
          - Exact: [ 512, 256, 8, 32 ]
          - Exact: [ 512, 256, 8, 64 ]
          - Exact: [ 512, 256, 8, 128 ]
          - Exact: [ 512, 256, 8, 256 ]
          - Exact: [ 512, 256, 8, 512 ]
          - Exact: [ 512, 256, 8, 1024 ]
          - Exact: [ 512, 256, 8, 2048 ]
          - Exact: [ 512, 512, 8, 32 ]
          - Exact: [ 512, 512, 8, 64 ]
          - Exact: [ 512, 512, 8, 128 ]
          - Exact: [ 512, 512, 8, 256 ]
          - Exact: [ 512, 512, 8, 512 ]
          - Exact: [ 512, 512, 8, 1024 ]
          - Exact: [ 512, 512, 8, 2048 ]
          - Exact: [ 512, 1024, 8, 32 ]
          - Exact: [ 512, 1024, 8, 64 ]
          - Exact: [ 512, 1024, 8, 128 ]
          - Exact: [ 512, 1024, 8, 256 ]
          - Exact: [ 512, 1024, 8, 512 ]
          - Exact: [ 512, 1024, 8, 1024 ]
          - Exact: [ 512, 1024, 8, 2048 ]
          - Exact: [ 512, 2048, 8, 32 ]
          - Exact: [ 512, 2048, 8, 64 ]
          - Exact: [ 512, 2048, 8, 128 ]
          - Exact: [ 512, 2048, 8, 256 ]
          - Exact: [ 512, 2048, 8, 512 ]
          - Exact: [ 512, 2048, 8, 1024 ]
          - Exact: [ 512, 2048, 8, 2048 ]
          - Exact: [ 1024, 32, 8, 32 ]
          - Exact: [ 1024, 32, 8, 64 ]
          - Exact: [ 1024, 32, 8, 128 ]
          - Exact: [ 1024, 32, 8, 256 ]
          - Exact: [ 1024, 32, 8, 512 ]
          - Exact: [ 1024, 32, 8, 1024 ]
          - Exact: [ 1024, 32, 8, 2048 ]
          - Exact: [ 1024, 64, 8, 32 ]
          - Exact: [ 1024, 64, 8, 64 ]
          - Exact: [ 1024, 64, 8, 128 ]
          - Exact: [ 1024, 64, 8, 256 ]
          - Exact: [ 1024, 64, 8, 512 ]
          - Exact: [ 1024, 64, 8, 1024 ]
          - Exact: [ 1024, 64, 8, 2048 ]
          - Exact: [ 1024, 128, 8, 32 ]
          - Exact: [ 1024, 128, 8, 64 ]
          - Exact: [ 1024, 128, 8, 128 ]
          - Exact: [ 1024, 128, 8, 256 ]
          - Exact: [ 1024, 128, 8, 512 ]
          - Exact: [ 1024, 128, 8, 1024 ]
          - Exact: [ 1024, 128, 8, 2048 ]
          - Exact: [ 1024, 256, 8, 32 ]
          - Exact: [ 1024, 256, 8, 64 ]
          - Exact: [ 1024, 256, 8, 128 ]
          - Exact: [ 1024, 256, 8, 256 ]
          - Exact: [ 1024, 256, 8, 512 ]
          - Exact: [ 1024, 256, 8, 1024 ]
          - Exact: [ 1024, 256, 8, 2048 ]
          - Exact: [ 1024, 512, 8, 32 ]
          - Exact: [ 1024, 512, 8, 64 ]
          - Exact: [ 1024, 512, 8, 128 ]
          - Exact: [ 1024, 512, 8, 256 ]
          - Exact: [ 1024, 512, 8, 512 ]
          - Exact: [ 1024, 512, 8, 1024 ]
          - Exact: [ 1024, 512, 8, 2048 ]
          - Exact: [ 1024, 1024, 8, 32 ]
          - Exact: [ 1024, 1024, 8, 64 ]
          - Exact: [ 1024, 1024, 8, 128 ]
          - Exact: [ 1024, 1024, 8, 256 ]
          - Exact: [ 1024, 1024, 8, 512 ]
          - Exact: [ 1024, 1024, 8, 1024 ]
          - Exact: [ 1024, 1024, 8, 2048 ]
          - Exact: [ 1024, 2048, 8, 32 ]
          - Exact: [ 1024, 2048, 8, 64 ]
          - Exact: [ 1024, 2048, 8, 128 ]
          - Exact: [ 1024, 2048, 8, 256 ]
          - Exact: [ 1024, 2048, 8, 512 ]
          - Exact: [ 1024, 2048, 8, 1024 ]
          - Exact: [ 1024, 2048, 8, 2048 ]
          - Exact: [ 2048, 32, 8, 32 ]
          - Exact: [ 2048, 32, 8, 64 ]
          - Exact: [ 2048, 32, 8, 128 ]
          - Exact: [ 2048, 32, 8, 256 ]
          - Exact: [ 2048, 32, 8, 512 ]
          - Exact: [ 2048, 32, 8, 1024 ]
          - Exact: [ 2048, 32, 8, 2048 ]
          - Exact: [ 2048, 64, 8, 32 ]
          - Exact: [ 2048, 64, 8, 64 ]
          - Exact: [ 2048, 64, 8, 128 ]
          - Exact: [ 2048, 64, 8, 256 ]
          - Exact: [ 2048, 64, 8, 512 ]
          - Exact: [ 2048, 64, 8, 1024 ]
          - Exact: [ 2048, 64, 8, 2048 ]
          - Exact: [ 2048, 128, 8, 32 ]
          - Exact: [ 2048, 128, 8, 64 ]
          - Exact: [ 2048, 128, 8, 128 ]
          - Exact: [ 2048, 128, 8, 256 ]
          - Exact: [ 2048, 128, 8, 512 ]
          - Exact: [ 2048, 128, 8, 1024 ]
          - Exact: [ 2048, 128, 8, 2048 ]
          - Exact: [ 2048, 256, 8, 32 ]
          - Exact: [ 2048, 256, 8, 64 ]
          - Exact: [ 2048, 256, 8, 128 ]
          - Exact: [ 2048, 256, 8, 256 ]
          - Exact: [ 2048, 256, 8, 512 ]
          - Exact: [ 2048, 256, 8, 1024 ]
          - Exact: [ 2048, 256, 8, 2048 ]
          - Exact: [ 2048, 512, 8, 32 ]
          - Exact: [ 2048, 512, 8, 64 ]
          - Exact: [ 2048, 512, 8, 128 ]
          - Exact: [ 2048, 512, 8, 256 ]
          - Exact: [ 2048, 512, 8, 512 ]
          - Exact: [ 2048, 512, 8, 1024 ]
          - Exact: [ 2048, 512, 8, 2048 ]
          - Exact: [ 2048, 1024, 8, 32 ]
          - Exact: [ 2048, 1024, 8, 64 ]
          - Exact: [ 2048, 1024, 8, 128 ]
          - Exact: [ 2048, 1024, 8, 256 ]
          - Exact: [ 2048, 1024, 8, 512 ]
          - Exact: [ 2048, 1024, 8, 1024 ]
          - Exact: [ 2048, 1024, 8, 2048 ]
          - Exact: [ 2048, 2048, 8, 32 ]
          - Exact: [ 2048, 2048, 8, 64 ]
          - Exact: [ 2048, 2048, 8, 128 ]
          - Exact: [ 2048, 2048, 8, 256 ]
          - Exact: [ 2048, 2048, 8, 512 ]
          - Exact: [ 2048, 2048, 8, 1024 ]
          - Exact: [ 2048, 2048, 8, 2048 ]

LibraryLogic:
    ScheduleName: "arcturus"
    DeviceNames: ["Device 7380", "Device 7388", "Device 738c", "Device 7390"]
    ArchitectureName: "gfx908"

LibraryClient:
